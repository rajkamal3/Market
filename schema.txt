App.js
import React, { Component } from 'react';
import Screener from './components/_invest/screener';
import styles from './App.css';

class App extends Component {
    componentDidMount() {
        handleIframe();
    }

    render() {
        return (
            <div className={styles.holder}>
                <Screener />
            </div>
        );
    }
}

export default App;

export const handleIframe = () => {
    if (window.self === window.top) {
        var antiClickjack = document.querySelector('#antiClickjack');
        antiClickjack.parentNode.removeChild(antiClickjack);
    } else {
        window.top.location = window.self.location;
    }
};




App.css:
.holder {
  display: flex;
  justify-content: center;
  min-height: 162vh;
  background-color: #333743;
  color: #feffff;
}

.textbox {
    height: 50px;
    border: 1px solid #bec5cc;
    border-radius: 5px;
    width: 30%;
    padding-left: 20px;
    margin: 10px 5px;
    font-size: 16px;
    background-repeat: no-repeat;
    background-color: #fafafa;
}

@media only screen and (max-width: 400px) {
  .holder {
    width: 100%;
    height: 100%;
    background-color: green;
  }
  .textbox {
    height: 50px;
    border: 1px solid #bec5cc;
    border-radius: 5px;
    width: 30%;
    padding-left: 20px;
    margin: 10px 5px;
    font-size: 16px;
    background-repeat: no-repeat;
    background-color: #fafafa;
    margin-left: 420px;
  }
}




companySchema.js:
import React, { Component } from 'react';
import axios from 'axios';
import parse from 'node-html-parser';
import styles from './invest.css';

class CompanySchema extends Component {
    constructor(props) {
        super(props);

        this.state = {
            companyDetails: {

            }
        }
    }

    componentDidMount() {
        const header = {
            "Access-Control-Allow-Credentials": "true",
            "Access-Control-Allow-Origin":Â "*",
            "User-Agent": "PostmanRuntime/7.22.0",
            "Accept": "*/*",
            "Postman-Token": "6dd814e9-4517-4ab3-8b14-0d4630576312",
            "X-Frame-Options": "SAMEORIGIN"
        }

        axios.get(this.props.link, header).then(res => {
            const parsed = parse(res.data);
            
            let companyName = parsed.querySelector('.pcstname');
            let sector = parsed.querySelector('.moneyprice_bx').querySelectorAll('span')[7];
            let sharePrice = parsed.querySelector('.nsedata_bx').querySelector('.div_live_price_wrap').querySelector('span');
            let dayChange = parsed.querySelector('.nsedata_bx').querySelector('.div_live_price_wrap').querySelectorAll('span')[2].querySelector('em');
            let oneYearLow = parsed.querySelector('.nsedata_bx').querySelectorAll('.open_lhs1')[0].childNodes[3].querySelectorAll('.low_high1')[1];
            let oneYearHigh = parsed.querySelector('.nsedata_bx').querySelectorAll('.open_lhs1')[0].childNodes[3].querySelectorAll('.low_high3')[1];
            let marketCap = parsed.querySelectorAll('.value_list')[1].childNodes[1].querySelectorAll('.value_txtfr')[0];
            let peRatio = parsed.querySelectorAll('.value_list')[0].childNodes[1].querySelectorAll('.value_txtfr')[1];
            let industryPe = parsed.querySelectorAll('.value_list')[1].childNodes[3].querySelectorAll('.value_txtfr')[1];

            this.setState({
                companyDetails: {
                    "companyName": companyName.innerHTML,
                    "sector": sector.innerHTML,
                    "sharePrice": sharePrice.innerHTML,
                    "dayChange": dayChange.innerHTML,
                    "oneYearLow": oneYearLow.innerHTML,
                    "oneYearHigh": oneYearHigh.innerHTML,
                    "marketCap": marketCap.innerHTML,
                    "peRatio": peRatio.innerHTML,
                    "industryPe": industryPe.innerHTML
                }
            })
        }).catch((err) => {
            console.log(err);
        });
    }

    render() {
        const companyDetails = this.state.companyDetails;

        if (companyDetails === null) {
            return null;
        }

        const anchorStyles = {
            color: 'white',
            fontWeight: 'bold'
        };

        return (
            <div className={[styles.companyContainer, 'companyRow'].join(' ')}>
                <div><a className='companyName' style={anchorStyles} target='_blank' href={'http://www.google.com/search?q=' + this.state.companyDetails.companyName + ' share'}>{this.state.companyDetails.companyName}</a></div>
                <div>Sector: {this.state.companyDetails.sector}</div>
                <div>Share Price: {this.state.companyDetails.sharePrice}</div>
                <div>Day's Change: {this.state.companyDetails.dayChange}</div>
                <div>52 Week Low: {this.state.companyDetails.oneYearLow}</div>
                <div>52 Week High: {this.state.companyDetails.oneYearHigh}</div>
                <div>Market Cap: {this.state.companyDetails.marketCap}</div>
                <div>PE Ratio: {this.state.companyDetails.peRatio}</div>
                <div>Industry PE: {this.state.companyDetails.industryPe}</div>
            </div>
        );
    }
}

export default CompanySchema;




screener.js:
import React, { Component } from 'react';
import CompanySchema from './companySchema';
import styles from './invest.css';

class Screener extends Component {
    companiesFilter () {
        var input = document.querySelector('.inputValue').value.toLowerCase();
        var companiesArray = document.querySelectorAll('.companyName');
        var companyRow = document.querySelectorAll('.companyRow');
        
        for (var i = 0; i < companiesArray.length; i++) {
            var currentCompany = companiesArray[i];
            var currentCompanyName = currentCompany.textContent || currentCompany.innerText;
            
            if (currentCompanyName.toLowerCase().indexOf(input) > -1) {
                companyRow[i].style.display = '';
            } else {
                companyRow[i].style.display = 'none';
            }
        }
    }

    render() {
        const aartiIndustries = 'https://www.moneycontrol.com/india/stockpricequote/chemicals/aartiindustries/AI45';
        const apolloTyres = 'https://www.moneycontrol.com/india/stockpricequote/tyres/apollotyres/AT14';
        const asianPaints = 'https://www.moneycontrol.com/india/stockpricequote/paintsvarnishes/asianpaints/AP31';
        const bajajAuto = 'https://www.moneycontrol.com/india/stockpricequote/auto-23-wheelers/bajajauto/BA10';
        const bergerPaints = 'https://www.moneycontrol.com/india/stockpricequote/paintsvarnishes/bergerpaintsindia/BPI02';
        const britannia = 'https://www.moneycontrol.com/india/stockpricequote/food-processing/britanniaindustries/BI';
        const cclProducts = 'https://www.moneycontrol.com/india/stockpricequote/plantations-teacoffee/cclproductsindia/CC10';
        const colgate = 'https://www.moneycontrol.com/india/stockpricequote/personal-care/colgatepalmoliveindia/CPI';
        const dmart = 'https://www.moneycontrol.com/india/stockpricequote/retail/avenuesupermarts/AS19';
        const dilipBuildcon = 'https://www.moneycontrol.com/india/stockpricequote/constructioncontracting-civil/dilipbuildcon/DB04';
        const exideInd = 'https://www.moneycontrol.com/india/stockpricequote/auto-ancillaries/exideindustries/EI';
        const finolexCables = 'https://www.moneycontrol.com/india/stockpricequote/cables-telephone/finolexcables/FC01';
        const godrejConsumer = 'https://www.moneycontrol.com/india/stockpricequote/personal-care/godrejconsumerproducts/GCP';
        const gujAlkali = 'https://www.moneycontrol.com/india/stockpricequote/chemicals/gujaratalkalieschemicals/GAC01';
        const hdfcBank = 'https://www.moneycontrol.com/india/stockpricequote/banks-private-sector/hdfcbank/HDF01';
        const hdfcLife = 'https://www.moneycontrol.com/india/stockpricequote/miscellaneous/hdfclifeinsurancecompanylimited/HSL01';
        const hul = 'https://www.moneycontrol.com/india/stockpricequote/personal-care/hindustanunilever/HU';
        const havells = 'https://www.moneycontrol.com/india/stockpricequote/electric-equipment/havellsindia/HI01';
        const iciciLombard = 'https://www.moneycontrol.com/india/stockpricequote/diversified/icicilombardgeneralinsurancecompany/ILG';
        const itc = 'https://www.moneycontrol.com/india/stockpricequote/cigarettes/itc/ITC';
        const indusindBank = 'https://www.moneycontrol.com/india/stockpricequote/banks-private-sector/indusindbank/IIB';
        const jubilantFood = 'https://www.moneycontrol.com/india/stockpricequote/miscellaneous/jubilantfoodworks/JF04';
        const kotakMahindra = 'https://www.moneycontrol.com/india/stockpricequote/banks-private-sector/kotakmahindrabank/KMB';
        const lupin = 'https://www.moneycontrol.com/india/stockpricequote/pharmaceuticals/lupin/L';
        const marico = 'https://www.moneycontrol.com/india/stockpricequote/personal-care/marico/M13';
        const mindtree = 'https://www.moneycontrol.com/india/stockpricequote/computers-software/mindtree/MT13';
        const mothersonSumi = 'https://www.moneycontrol.com/india/stockpricequote/auto-ancillaries/mothersonsumisystems/MSS01';
        const muthootFinance = 'https://www.moneycontrol.com/india/stockpricequote/finance-investments/muthootfinance/MF10';
        const nbccIndia = 'https://www.moneycontrol.com/india/stockpricequote/infrastructure-general/nbccindia/NBC01';
        const ncc = 'https://www.moneycontrol.com/india/stockpricequote/constructioncontracting-civil/ncc/NCC01';
        const nestle = 'https://www.moneycontrol.com/india/stockpricequote/food-processing/nestleindia/NI';
        const pidiliteInd = 'https://www.moneycontrol.com/india/stockpricequote/chemicals/pidiliteindustries/PI11';
        const relaxoFootwear = 'https://www.moneycontrol.com/india/stockpricequote/leather-products/relaxofootwears/RF07';
        const sbiLife = 'https://www.moneycontrol.com/india/stockpricequote/diversified/sbilifeinsurancecompany/SLI03';
        const sunTv = 'https://www.moneycontrol.com/india/stockpricequote/mediaentertainment/suntvnetwork/STN01';
        const tcs = 'https://www.moneycontrol.com/india/stockpricequote/computers-software/tataconsultancyservices/TCS';
        const vipIndustries = 'https://www.moneycontrol.com/india/stockpricequote/plastics/vipindustries/VIP';
        const voltas = 'https://www.moneycontrol.com/india/stockpricequote/diversified/voltas/V';
        const whirlpool = 'https://www.moneycontrol.com/india/stockpricequote/consumer-goods-white-goods/whirlpoolindia/WI';

        const companies = [aartiIndustries, apolloTyres, asianPaints, bajajAuto, bergerPaints, britannia, cclProducts, colgate, dmart, dilipBuildcon, exideInd, finolexCables,
        godrejConsumer, gujAlkali, hdfcBank, hdfcLife, hul, havells, iciciLombard, itc, indusindBank, jubilantFood, kotakMahindra, lupin, marico, mindtree, mothersonSumi,
        muthootFinance, nbccIndia, ncc, nestle, pidiliteInd, relaxoFootwear, sbiLife, sunTv, tcs, vipIndustries, voltas, whirlpool];

        return (
            <div className={styles.container}>
                <div className={styles.header}>
                    <input onChange={this.companiesFilter.bind(this)} type='textbox' placeholder='Search for companies...' className={[styles.textbox, 'inputValue'].join(' ')} />
                </div>
                {companies.map((el) => {
                    return <CompanySchema key={Math.random()} link={el} />
                })}
            </div>
        );
    }
}

export default Screener;













// let one = "https://api.storyblok.com/v1/cdn/stories/health?version=published&token=wANpEQEsMYGOwLxwXQ76Ggtt"
// let two = "https://api.storyblok.com/v1/cdn/datasources/?token=wANpEQEsMYGOwLxwXQ76Ggtt"
// let three = "https://api.storyblok.com/v1/cdn/stories/vue?version=published&token=wANpEQEsMYGOwLxwXQ76Ggtt"

// const requestOne = axios.get(one);
// const requestTwo = axios.get(two);
// const requestThree = axios.get(three);

// axios.all([requestOne, requestTwo, requestThree]).then(axios.spread((...responses) => {
//   const responseOne = responses[0]
//   const responseTwo = responses[1]
//   const responesThree = responses[2]
//   // use/access the results 
// })).catch(errors => {
//   // react on errors.
// })
// https://cors-escape.herokuapp.com/
// const URL = 'https://cors-anywhere.herokuapp.com/https://www.tickertape.in/stocks/aarti-industries-ARTI';
//const URL2 = 'https://cors-escape.herokuapp.com/https://www.nseindia.com/get-quotes/equity?symbol=AARTIIND';
//let aartiIndustries = 'https://www.moneycontrol.com/india/stockpricequote/chemicals/aartiindustries/AI45';




invest.css:
.companyContainer {
    background-color: #424554;
    padding: 20px;
    display: grid;
    grid-template-rows: repeat(2, 40px);
    grid-template-columns: repeat(3, 387px);
    margin-bottom: 10px;
}

@media only screen and (max-width: 400px) {
    .companyContainer {
        background-color: red;
        padding: 20px;
        display: grid;
        width: 28%;
        height: 3%;
        grid-template-rows: repeat(9, 11%);
        grid-template-columns: repeat(1, 90%);
        margin-bottom: 10px;
    }
    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        height: 100%;
    }
    .textbox {
        height: 50px;
        border: 1px solid #bec5cc;
        border-radius: 5px;
        width: 30%;
        padding-left: 20px;
        margin: 10px 5px;
        font-size: 16px;
        background-repeat: no-repeat;
        background-color: #fafafa;
        margin-left: 420px;
    }
}

.textbox {
    height: 50px;
    border: 1px solid #bec5cc;
    border-radius: 5px;
    width: 30%;
    padding-left: 20px;
    margin: 10px 5px;
    font-size: 16px;
    background-repeat: no-repeat;
    background-color: #fafafa;
}

.header {
    width: 1201px;
}
